module example

import module2::Type1
import module3::{Type2, Type3}

// comment

struct Struct1 {
    field1: [i16, 3],
    field2: u64,
}

struct Struct2 {
    field1: *mut Type1,
    field2: &Type2,
    field3: &mut Type3,
    field4: u32,
    field5: [i8; 2],
    field6: [&mut Type1; 6],
    field7: [Struct1; 4],
}

//! enum docstring
enum Enumeration {
    Value1 = 0,
    Value2,
    Value3 = 5,
}

union TaggedUnion {
    Type1,
    Type2(i32),
    Type3(u64, bool),
    Type4 { field1: String, field2: u16 }
}

union Option<T> {
    Some(T),
    None
}

//! component doc
component Component {
    parameters {
        param1: TaggedUnion,
        param2: Enumeration,
        param3: Struct2,
    }

    //! command doc
    command doSomething(param1: u32, param2: Type1) -> Option<u64>

    statuses {
        1: { param1, param2 },
        2: { param3.field5[2], param3.field7[2..].field1[..] }
        3: param1,
    }
}
